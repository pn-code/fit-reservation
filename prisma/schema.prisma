datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

generator client {
  provider = "prisma-client-js"
}

model CalorieGoal {
  userId String @id
  goal   Int
}

model ExerciseEntry {
  id       Int      @id @default(autoincrement())
  name     String
  type     String
  duration Int?
  sets     Int?
  reps     Int?
  weight   Float?
  calories Int?
  userId   String
  date     DateTime @default(now())
}

model FoodEntry {
  id       Int      @id @default(autoincrement())
  name     String
  calories Int      @default(0)
  carbs    Int
  fats     Int
  protein  Int
  userId   String
  date     DateTime @default(now())
}

model WeightMeasurement {
  id        Int      @id @default(autoincrement())
  weight    Float
  createdAt DateTime @default(now())
  userId    String
}

model BodyFatMeasurement {
  id        Int      @id @default(autoincrement())
  bodyfat   Float
  createdAt DateTime @default(now())
  userId    String
}

model Subscription {
  id              Int       @id @default(autoincrement())
  userId          String
  lastPaymentDate DateTime  @default(now())
  expirationDate  DateTime?
}

model TrainingPlan {
  id           Int           @id @default(autoincrement())
  userId       String
  createdAt    DateTime      @default(now())
  modifiedAt   DateTime      @default(now())
  name         String
  description  String
  reviews      Review[]
  exercises    Exercise[]
  savedByUsers SavedByUser[]
}

model SavedByUser {
  id             Int           @id @default(autoincrement())
  userId         String
  TrainingPlan   TrainingPlan? @relation(fields: [trainingPlanId], references: [id])
  trainingPlanId Int?

  @@index([trainingPlanId])
}

model Exercise {
  id             Int           @id @default(autoincrement())
  name           String
  type           String
  sets           Int
  reps           Int
  duration       Int
  TrainingPlan   TrainingPlan? @relation(fields: [trainingPlanId], references: [id], onDelete: Cascade)
  trainingPlanId Int

  @@index([trainingPlanId])
}

model Review {
  id             Int           @id @default(autoincrement())
  userId         String
  rating         Float
  comment        String
  createdAt      DateTime      @default(now())
  modifiedAt     DateTime      @default(now())
  TrainingPlan   TrainingPlan? @relation(fields: [trainingPlanId], references: [id], onDelete: Cascade)
  trainingPlanId Int?

  @@index([trainingPlanId])
}
